name: build

on: [push, pull_request]

env:
  CACHE_VERSION: 6
  DEBIAN_FRONTEND: noninteractive
  HOMEBREW_NO_AUTO_UPDATE: 1
  PAWPAW_SKIP_LTO: 1
  WITH_LTO: false

jobs:
  windows:
    strategy:
      matrix:
        target: [win32, win64]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ~/PawPawBuilds
          key: ${{ matrix.target }}-v${{ env.CACHE_VERSION }}
      - name: Fix GitHub's mess
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          dpkg -l
          sudo apt-get install -yqq --allow-downgrades libgd3/jammy libpcre2-8-0/jammy libpcre2-16-0/jammy libpcre2-32-0/jammy libpcre2-posix3/jammy
          dpkg -l
          sudo apt-get purge libmono* moby* mono* msbuild* nginx* php* libgdiplus libpcre2-posix3 libpq5 nuget
          dpkg -l
          sudo dpkg --add-architecture i386
          sudo apt-get update -qq
          sudo apt-get install libicu70:i386 libstdc++6:i386 --allow-downgrades
          #  libc6:i386 libgcc-s1:i386 
      - name: Set up dependencies (win32)
        if: ${{ matrix.target == 'win32' }}
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update -qq
          sudo apt-get install -yqq binutils-mingw-w64-i686 g++-mingw-w64-i686 gperf mingw-w64 wine-stable
      - name: Set up dependencies (win64)
        if: ${{ matrix.target == 'win64' }}
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update -qq
          sudo apt-get install -yqq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 gperf mingw-w64 wine-stable
      - name: Build extra dependencies
        run: |
          git clone --depth=1 https://github.com/DISTRHO/PawPaw.git
          ./PawPaw/bootstrap-cardinal.sh ${{ matrix.target }}
      - name: Build cross-compiled
        run: |
          source PawPaw/local.env ${{ matrix.target }}
          make features
          make CARLA_EXTRA_TARGETS=true NOOPT=true -j $(nproc)
      - name: Set sha8
        id: slug
        run: echo "::set-output name=sha8::$(echo ${{ github.sha }} | cut -c1-8)"
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-${{ matrix.target }}-${{ github.event.pull_request.number || steps.slug.outputs.sha8 }}
          path: |
            bin/*
            !bin/*-ladspa.dll
            !bin/*-dssi.dll

